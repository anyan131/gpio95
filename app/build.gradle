plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
        ndk {
            moduleName "src/main/cpp/CMakeLists.txt"
            abiFilters "arm64-v8a"
        }
    }


    packagingOptions {
        exclude 'lib/arm64-v8a/libgpio95-lib.so'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildFeatures {
        viewBinding true
    }



    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version '3.10.2'
        }
    }
}
//该task用来打包jar包
task makeJar(type: Copy) {
    delete 'libs/sdk.jar' //删除已经存在的jar包
    //  这个目录里面是classes.jar 之前也是一直卡在这里
    from('build/intermediates/compile_library_classes_jar/debug/')//从该目录下加载要打包的文件，注意这个目录，不同版本的AndroidStudio是不一样的，比如在3.0版本是build/intermediates/bundles/release/，要自己去查一下。
    into('libs/')//jar包的保存目录
    include('classes.jar')//设置过滤，只打包classes文件
    rename('classes.jar', 'sdk.jar')//重命名，mylibrary.jar 根据自己的需求设置
}

makeJar.dependsOn(build)

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}